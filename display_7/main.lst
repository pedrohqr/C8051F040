                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.6.0 #9615 (MINGW64)
                                      4 ;--------------------------------------------------------
                                      5 	.module main
                                      6 	.optsdcc -mmcs51 --model-small
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _disp7
                                     12 	.globl _main
                                     13 	.globl _sync_disp
                                     14 	.globl _esc_disp7s
                                     15 	.globl _clear
                                     16 	.globl _delay_ms
                                     17 	.globl _Init_Device
                                     18 	.globl _Interrupts_Init
                                     19 	.globl _Oscillator_Init
                                     20 	.globl _Port_IO_Init
                                     21 	.globl _Timer_Init
                                     22 	.globl _Reset_Sources_Init
                                     23 	.globl _CANTEST
                                     24 	.globl _CANCCE
                                     25 	.globl _CANDAR
                                     26 	.globl _CANIF
                                     27 	.globl _CANEIE
                                     28 	.globl _CANSIE
                                     29 	.globl _CANIE
                                     30 	.globl _CANINIT
                                     31 	.globl _SPIEN
                                     32 	.globl _TXBMT
                                     33 	.globl _NSSMD0
                                     34 	.globl _NSSMD1
                                     35 	.globl _RXOVRN
                                     36 	.globl _MODF
                                     37 	.globl _WCOL
                                     38 	.globl _SPIF
                                     39 	.globl _AD2WINT
                                     40 	.globl _AD2CM0
                                     41 	.globl _AD2CM1
                                     42 	.globl _AD2CM2
                                     43 	.globl _AD2BUSY
                                     44 	.globl _AD2INT
                                     45 	.globl _AD2TM
                                     46 	.globl _AD2EN
                                     47 	.globl _AD0LJST
                                     48 	.globl _AD0WINT
                                     49 	.globl _AD0CM0
                                     50 	.globl _AD0CM1
                                     51 	.globl _AD0BUSY
                                     52 	.globl _AD0INT
                                     53 	.globl _AD0TM
                                     54 	.globl _AD0EN
                                     55 	.globl _CCF0
                                     56 	.globl _CCF1
                                     57 	.globl _CCF2
                                     58 	.globl _CCF3
                                     59 	.globl _CCF4
                                     60 	.globl _CCF5
                                     61 	.globl _CR
                                     62 	.globl _CF
                                     63 	.globl _P
                                     64 	.globl _F1
                                     65 	.globl _OV
                                     66 	.globl _RS0
                                     67 	.globl _RS1
                                     68 	.globl _F0
                                     69 	.globl _AC
                                     70 	.globl _CY
                                     71 	.globl _CPRL4
                                     72 	.globl _CT4
                                     73 	.globl _TR4
                                     74 	.globl _EXEN4
                                     75 	.globl _EXF4
                                     76 	.globl _TF4
                                     77 	.globl _CPRL3
                                     78 	.globl _CT3
                                     79 	.globl _TR3
                                     80 	.globl _EXEN3
                                     81 	.globl _EXF3
                                     82 	.globl _TF3
                                     83 	.globl _CPRL2
                                     84 	.globl _CT2
                                     85 	.globl _TR2
                                     86 	.globl _EXEN2
                                     87 	.globl _EXF2
                                     88 	.globl _TF2
                                     89 	.globl _LEC0
                                     90 	.globl _LEC1
                                     91 	.globl _LEC2
                                     92 	.globl _TXOK
                                     93 	.globl _RXOK
                                     94 	.globl _EPASS
                                     95 	.globl _EWARN
                                     96 	.globl _BOFF
                                     97 	.globl _SMBTOE
                                     98 	.globl _SMBFTE
                                     99 	.globl _AA
                                    100 	.globl _SI
                                    101 	.globl _STO
                                    102 	.globl _STA
                                    103 	.globl _ENSMB
                                    104 	.globl _BUSY
                                    105 	.globl _PX0
                                    106 	.globl _PT0
                                    107 	.globl _PX1
                                    108 	.globl _PT1
                                    109 	.globl _PS0
                                    110 	.globl _PT2
                                    111 	.globl _EX0
                                    112 	.globl _ET0
                                    113 	.globl _EX1
                                    114 	.globl _ET1
                                    115 	.globl _ES0
                                    116 	.globl _ET2
                                    117 	.globl _EA
                                    118 	.globl _RI1
                                    119 	.globl _TI1
                                    120 	.globl _RB81
                                    121 	.globl _TB81
                                    122 	.globl _REN1
                                    123 	.globl _MCE1
                                    124 	.globl _S1MODE
                                    125 	.globl _RI0
                                    126 	.globl _TI0
                                    127 	.globl _RB80
                                    128 	.globl _TB80
                                    129 	.globl _REN0
                                    130 	.globl _SM20
                                    131 	.globl _SM10
                                    132 	.globl _SM00
                                    133 	.globl _CP2HYN0
                                    134 	.globl _CP2HYN1
                                    135 	.globl _CP2HYP0
                                    136 	.globl _CP2HYP1
                                    137 	.globl _CP2FIF
                                    138 	.globl _CP2RIF
                                    139 	.globl _CP2OUT
                                    140 	.globl _CP2EN
                                    141 	.globl _CP1HYN0
                                    142 	.globl _CP1HYN1
                                    143 	.globl _CP1HYP0
                                    144 	.globl _CP1HYP1
                                    145 	.globl _CP1FIF
                                    146 	.globl _CP1RIF
                                    147 	.globl _CP1OUT
                                    148 	.globl _CP1EN
                                    149 	.globl _CP0HYN0
                                    150 	.globl _CP0HYN1
                                    151 	.globl _CP0HYP0
                                    152 	.globl _CP0HYP1
                                    153 	.globl _CP0FIF
                                    154 	.globl _CP0RIF
                                    155 	.globl _CP0OUT
                                    156 	.globl _CP0EN
                                    157 	.globl _IT0
                                    158 	.globl _IE0
                                    159 	.globl _IT1
                                    160 	.globl _IE1
                                    161 	.globl _TR0
                                    162 	.globl _TF0
                                    163 	.globl _TR1
                                    164 	.globl _TF1
                                    165 	.globl _P7_7
                                    166 	.globl _P7_6
                                    167 	.globl _P7_5
                                    168 	.globl _P7_4
                                    169 	.globl _P7_3
                                    170 	.globl _P7_2
                                    171 	.globl _P7_1
                                    172 	.globl _P7_0
                                    173 	.globl _P6_7
                                    174 	.globl _P6_6
                                    175 	.globl _P6_5
                                    176 	.globl _P6_4
                                    177 	.globl _P6_3
                                    178 	.globl _P6_2
                                    179 	.globl _P6_1
                                    180 	.globl _P6_0
                                    181 	.globl _P5_7
                                    182 	.globl _P5_6
                                    183 	.globl _P5_5
                                    184 	.globl _P5_4
                                    185 	.globl _P5_3
                                    186 	.globl _P5_2
                                    187 	.globl _P5_1
                                    188 	.globl _P5_0
                                    189 	.globl _P4_7
                                    190 	.globl _P4_6
                                    191 	.globl _P4_5
                                    192 	.globl _P4_4
                                    193 	.globl _P4_3
                                    194 	.globl _P4_2
                                    195 	.globl _P4_1
                                    196 	.globl _P4_0
                                    197 	.globl _P3_7
                                    198 	.globl _P3_6
                                    199 	.globl _P3_5
                                    200 	.globl _P3_4
                                    201 	.globl _P3_3
                                    202 	.globl _P3_2
                                    203 	.globl _P3_1
                                    204 	.globl _P3_0
                                    205 	.globl _P2_7
                                    206 	.globl _P2_6
                                    207 	.globl _P2_5
                                    208 	.globl _P2_4
                                    209 	.globl _P2_3
                                    210 	.globl _P2_2
                                    211 	.globl _P2_1
                                    212 	.globl _P2_0
                                    213 	.globl _P1_7
                                    214 	.globl _P1_6
                                    215 	.globl _P1_5
                                    216 	.globl _P1_4
                                    217 	.globl _P1_3
                                    218 	.globl _P1_2
                                    219 	.globl _P1_1
                                    220 	.globl _P1_0
                                    221 	.globl _P0_7
                                    222 	.globl _P0_6
                                    223 	.globl _P0_5
                                    224 	.globl _P0_4
                                    225 	.globl _P0_3
                                    226 	.globl _P0_2
                                    227 	.globl _P0_1
                                    228 	.globl _P0_0
                                    229 	.globl __XPAGE
                                    230 	.globl _DP
                                    231 	.globl _ADC0
                                    232 	.globl _ADC0LT
                                    233 	.globl _ADC0GT
                                    234 	.globl _TMR4
                                    235 	.globl _TMR3
                                    236 	.globl _TMR2
                                    237 	.globl _RCAP4
                                    238 	.globl _RCAP3
                                    239 	.globl _RCAP2
                                    240 	.globl _DAC1
                                    241 	.globl _DAC0
                                    242 	.globl _CAN0DAT
                                    243 	.globl _PCA0CP5
                                    244 	.globl _PCA0CP4
                                    245 	.globl _PCA0CP3
                                    246 	.globl _PCA0CP2
                                    247 	.globl _PCA0CP1
                                    248 	.globl _PCA0CP0
                                    249 	.globl _PCA0
                                    250 	.globl _WDTCN
                                    251 	.globl _PCA0CPH1
                                    252 	.globl _PCA0CPL1
                                    253 	.globl _PCA0CPH0
                                    254 	.globl _PCA0CPL0
                                    255 	.globl _PCA0H
                                    256 	.globl _PCA0L
                                    257 	.globl _P7
                                    258 	.globl _CAN0CN
                                    259 	.globl _SPI0CN
                                    260 	.globl _EIP2
                                    261 	.globl _EIP1
                                    262 	.globl _B
                                    263 	.globl _RSTSRC
                                    264 	.globl _PCA0CPH4
                                    265 	.globl _PCA0CPL4
                                    266 	.globl _PCA0CPH3
                                    267 	.globl _PCA0CPL3
                                    268 	.globl _PCA0CPH2
                                    269 	.globl _PCA0CPL2
                                    270 	.globl _P6
                                    271 	.globl _ADC2CN
                                    272 	.globl _ADC0CN
                                    273 	.globl _EIE2
                                    274 	.globl _EIE1
                                    275 	.globl _XBR3
                                    276 	.globl _XBR2
                                    277 	.globl _XBR1
                                    278 	.globl _PCA0CPH5
                                    279 	.globl _XBR0
                                    280 	.globl _PCA0CPL5
                                    281 	.globl _ACC
                                    282 	.globl _PCA0CPM5
                                    283 	.globl _PCA0CPM4
                                    284 	.globl _PCA0CPM3
                                    285 	.globl _PCA0CPM2
                                    286 	.globl _CAN0TST
                                    287 	.globl _PCA0CPM1
                                    288 	.globl _CAN0ADR
                                    289 	.globl _PCA0CPM0
                                    290 	.globl _CAN0DATH
                                    291 	.globl _PCA0MD
                                    292 	.globl _P5
                                    293 	.globl _CAN0DATL
                                    294 	.globl _PCA0CN
                                    295 	.globl _HVA0CN
                                    296 	.globl _DAC1CN
                                    297 	.globl _DAC0CN
                                    298 	.globl _DAC1H
                                    299 	.globl _DAC0H
                                    300 	.globl _DAC1L
                                    301 	.globl _DAC0L
                                    302 	.globl _REF0CN
                                    303 	.globl _PSW
                                    304 	.globl _SMB0CR
                                    305 	.globl _TMR4H
                                    306 	.globl _TMR3H
                                    307 	.globl _TMR2H
                                    308 	.globl _TMR4L
                                    309 	.globl _TMR3L
                                    310 	.globl _TMR2L
                                    311 	.globl _RCAP4H
                                    312 	.globl _RCAP3H
                                    313 	.globl _RCAP2H
                                    314 	.globl _RCAP4L
                                    315 	.globl _RCAP3L
                                    316 	.globl _RCAP2L
                                    317 	.globl _TMR4CF
                                    318 	.globl _TMR3CF
                                    319 	.globl _TMR2CF
                                    320 	.globl _P4
                                    321 	.globl _TMR4CN
                                    322 	.globl _TMR3CN
                                    323 	.globl _TMR2CN
                                    324 	.globl _ADC0LTH
                                    325 	.globl _ADC2LT
                                    326 	.globl _ADC0LTL
                                    327 	.globl _ADC0GTH
                                    328 	.globl _ADC2GT
                                    329 	.globl _ADC0GTL
                                    330 	.globl _SMB0ADR
                                    331 	.globl _SMB0DAT
                                    332 	.globl _SMB0STA
                                    333 	.globl _CAN0STA
                                    334 	.globl _SMB0CN
                                    335 	.globl _ADC0H
                                    336 	.globl _ADC2
                                    337 	.globl _ADC0L
                                    338 	.globl _ADC2CF
                                    339 	.globl _ADC0CF
                                    340 	.globl _AMX2SL
                                    341 	.globl _AMX0SL
                                    342 	.globl _AMX0CF
                                    343 	.globl _AMX0PRT
                                    344 	.globl _AMX2CF
                                    345 	.globl _SADEN0
                                    346 	.globl _IP
                                    347 	.globl _FLACL
                                    348 	.globl _FLSCL
                                    349 	.globl _P3
                                    350 	.globl _P3MDIN
                                    351 	.globl _P2MDIN
                                    352 	.globl _P1MDIN
                                    353 	.globl _SADDR1
                                    354 	.globl _SADDR0
                                    355 	.globl _IE
                                    356 	.globl _P3MDOUT
                                    357 	.globl _P2MDOUT
                                    358 	.globl _P1MDOUT
                                    359 	.globl _P0MDOUT
                                    360 	.globl _EMI0CF
                                    361 	.globl _EMI0CN
                                    362 	.globl _EMI0TC
                                    363 	.globl _P2
                                    364 	.globl _P7MDOUT
                                    365 	.globl _P6MDOUT
                                    366 	.globl _P5MDOUT
                                    367 	.globl _SPI0CKR
                                    368 	.globl _P4MDOUT
                                    369 	.globl _SPI0DAT
                                    370 	.globl _SPI0CFG
                                    371 	.globl _SBUF1
                                    372 	.globl _SBUF0
                                    373 	.globl _SCON1
                                    374 	.globl _SCON0
                                    375 	.globl _CLKSEL
                                    376 	.globl _SFRPGCN
                                    377 	.globl _SSTA0
                                    378 	.globl _P1
                                    379 	.globl _PSCTL
                                    380 	.globl _CKCON
                                    381 	.globl _TH1
                                    382 	.globl _OSCXCN
                                    383 	.globl _TH0
                                    384 	.globl _OSCICL
                                    385 	.globl _TL1
                                    386 	.globl _OSCICN
                                    387 	.globl _TL0
                                    388 	.globl _CPT2MD
                                    389 	.globl _CPT1MD
                                    390 	.globl _CPT0MD
                                    391 	.globl _TMOD
                                    392 	.globl _CPT2CN
                                    393 	.globl _CPT1CN
                                    394 	.globl _CPT0CN
                                    395 	.globl _TCON
                                    396 	.globl _PCON
                                    397 	.globl _SFRLAST
                                    398 	.globl _SFRNEXT
                                    399 	.globl _SFRPAGE
                                    400 	.globl _DPH
                                    401 	.globl _DPL
                                    402 	.globl _SP
                                    403 	.globl _P0
                                    404 	.globl _alg_D
                                    405 	.globl _alg_E
                                    406 ;--------------------------------------------------------
                                    407 ; special function registers
                                    408 ;--------------------------------------------------------
                                    409 	.area RSEG    (ABS,DATA)
      000000                        410 	.org 0x0000
                           000080   411 G$P0$0$0 == 0x0080
                           000080   412 _P0	=	0x0080
                           000081   413 G$SP$0$0 == 0x0081
                           000081   414 _SP	=	0x0081
                           000082   415 G$DPL$0$0 == 0x0082
                           000082   416 _DPL	=	0x0082
                           000083   417 G$DPH$0$0 == 0x0083
                           000083   418 _DPH	=	0x0083
                           000084   419 G$SFRPAGE$0$0 == 0x0084
                           000084   420 _SFRPAGE	=	0x0084
                           000085   421 G$SFRNEXT$0$0 == 0x0085
                           000085   422 _SFRNEXT	=	0x0085
                           000086   423 G$SFRLAST$0$0 == 0x0086
                           000086   424 _SFRLAST	=	0x0086
                           000087   425 G$PCON$0$0 == 0x0087
                           000087   426 _PCON	=	0x0087
                           000088   427 G$TCON$0$0 == 0x0088
                           000088   428 _TCON	=	0x0088
                           000088   429 G$CPT0CN$0$0 == 0x0088
                           000088   430 _CPT0CN	=	0x0088
                           000088   431 G$CPT1CN$0$0 == 0x0088
                           000088   432 _CPT1CN	=	0x0088
                           000088   433 G$CPT2CN$0$0 == 0x0088
                           000088   434 _CPT2CN	=	0x0088
                           000089   435 G$TMOD$0$0 == 0x0089
                           000089   436 _TMOD	=	0x0089
                           000089   437 G$CPT0MD$0$0 == 0x0089
                           000089   438 _CPT0MD	=	0x0089
                           000089   439 G$CPT1MD$0$0 == 0x0089
                           000089   440 _CPT1MD	=	0x0089
                           000089   441 G$CPT2MD$0$0 == 0x0089
                           000089   442 _CPT2MD	=	0x0089
                           00008A   443 G$TL0$0$0 == 0x008a
                           00008A   444 _TL0	=	0x008a
                           00008A   445 G$OSCICN$0$0 == 0x008a
                           00008A   446 _OSCICN	=	0x008a
                           00008B   447 G$TL1$0$0 == 0x008b
                           00008B   448 _TL1	=	0x008b
                           00008B   449 G$OSCICL$0$0 == 0x008b
                           00008B   450 _OSCICL	=	0x008b
                           00008C   451 G$TH0$0$0 == 0x008c
                           00008C   452 _TH0	=	0x008c
                           00008C   453 G$OSCXCN$0$0 == 0x008c
                           00008C   454 _OSCXCN	=	0x008c
                           00008D   455 G$TH1$0$0 == 0x008d
                           00008D   456 _TH1	=	0x008d
                           00008E   457 G$CKCON$0$0 == 0x008e
                           00008E   458 _CKCON	=	0x008e
                           00008F   459 G$PSCTL$0$0 == 0x008f
                           00008F   460 _PSCTL	=	0x008f
                           000090   461 G$P1$0$0 == 0x0090
                           000090   462 _P1	=	0x0090
                           000091   463 G$SSTA0$0$0 == 0x0091
                           000091   464 _SSTA0	=	0x0091
                           000096   465 G$SFRPGCN$0$0 == 0x0096
                           000096   466 _SFRPGCN	=	0x0096
                           000097   467 G$CLKSEL$0$0 == 0x0097
                           000097   468 _CLKSEL	=	0x0097
                           000098   469 G$SCON0$0$0 == 0x0098
                           000098   470 _SCON0	=	0x0098
                           000098   471 G$SCON1$0$0 == 0x0098
                           000098   472 _SCON1	=	0x0098
                           000099   473 G$SBUF0$0$0 == 0x0099
                           000099   474 _SBUF0	=	0x0099
                           000099   475 G$SBUF1$0$0 == 0x0099
                           000099   476 _SBUF1	=	0x0099
                           00009A   477 G$SPI0CFG$0$0 == 0x009a
                           00009A   478 _SPI0CFG	=	0x009a
                           00009B   479 G$SPI0DAT$0$0 == 0x009b
                           00009B   480 _SPI0DAT	=	0x009b
                           00009C   481 G$P4MDOUT$0$0 == 0x009c
                           00009C   482 _P4MDOUT	=	0x009c
                           00009D   483 G$SPI0CKR$0$0 == 0x009d
                           00009D   484 _SPI0CKR	=	0x009d
                           00009D   485 G$P5MDOUT$0$0 == 0x009d
                           00009D   486 _P5MDOUT	=	0x009d
                           00009E   487 G$P6MDOUT$0$0 == 0x009e
                           00009E   488 _P6MDOUT	=	0x009e
                           00009F   489 G$P7MDOUT$0$0 == 0x009f
                           00009F   490 _P7MDOUT	=	0x009f
                           0000A0   491 G$P2$0$0 == 0x00a0
                           0000A0   492 _P2	=	0x00a0
                           0000A1   493 G$EMI0TC$0$0 == 0x00a1
                           0000A1   494 _EMI0TC	=	0x00a1
                           0000A2   495 G$EMI0CN$0$0 == 0x00a2
                           0000A2   496 _EMI0CN	=	0x00a2
                           0000A3   497 G$EMI0CF$0$0 == 0x00a3
                           0000A3   498 _EMI0CF	=	0x00a3
                           0000A4   499 G$P0MDOUT$0$0 == 0x00a4
                           0000A4   500 _P0MDOUT	=	0x00a4
                           0000A5   501 G$P1MDOUT$0$0 == 0x00a5
                           0000A5   502 _P1MDOUT	=	0x00a5
                           0000A6   503 G$P2MDOUT$0$0 == 0x00a6
                           0000A6   504 _P2MDOUT	=	0x00a6
                           0000A7   505 G$P3MDOUT$0$0 == 0x00a7
                           0000A7   506 _P3MDOUT	=	0x00a7
                           0000A8   507 G$IE$0$0 == 0x00a8
                           0000A8   508 _IE	=	0x00a8
                           0000A9   509 G$SADDR0$0$0 == 0x00a9
                           0000A9   510 _SADDR0	=	0x00a9
                           0000A9   511 G$SADDR1$0$0 == 0x00a9
                           0000A9   512 _SADDR1	=	0x00a9
                           0000AD   513 G$P1MDIN$0$0 == 0x00ad
                           0000AD   514 _P1MDIN	=	0x00ad
                           0000AE   515 G$P2MDIN$0$0 == 0x00ae
                           0000AE   516 _P2MDIN	=	0x00ae
                           0000AF   517 G$P3MDIN$0$0 == 0x00af
                           0000AF   518 _P3MDIN	=	0x00af
                           0000B0   519 G$P3$0$0 == 0x00b0
                           0000B0   520 _P3	=	0x00b0
                           0000B7   521 G$FLSCL$0$0 == 0x00b7
                           0000B7   522 _FLSCL	=	0x00b7
                           0000B7   523 G$FLACL$0$0 == 0x00b7
                           0000B7   524 _FLACL	=	0x00b7
                           0000B8   525 G$IP$0$0 == 0x00b8
                           0000B8   526 _IP	=	0x00b8
                           0000B9   527 G$SADEN0$0$0 == 0x00b9
                           0000B9   528 _SADEN0	=	0x00b9
                           0000BA   529 G$AMX2CF$0$0 == 0x00ba
                           0000BA   530 _AMX2CF	=	0x00ba
                           0000BD   531 G$AMX0PRT$0$0 == 0x00bd
                           0000BD   532 _AMX0PRT	=	0x00bd
                           0000BA   533 G$AMX0CF$0$0 == 0x00ba
                           0000BA   534 _AMX0CF	=	0x00ba
                           0000BB   535 G$AMX0SL$0$0 == 0x00bb
                           0000BB   536 _AMX0SL	=	0x00bb
                           0000BB   537 G$AMX2SL$0$0 == 0x00bb
                           0000BB   538 _AMX2SL	=	0x00bb
                           0000BC   539 G$ADC0CF$0$0 == 0x00bc
                           0000BC   540 _ADC0CF	=	0x00bc
                           0000BC   541 G$ADC2CF$0$0 == 0x00bc
                           0000BC   542 _ADC2CF	=	0x00bc
                           0000BE   543 G$ADC0L$0$0 == 0x00be
                           0000BE   544 _ADC0L	=	0x00be
                           0000BE   545 G$ADC2$0$0 == 0x00be
                           0000BE   546 _ADC2	=	0x00be
                           0000BF   547 G$ADC0H$0$0 == 0x00bf
                           0000BF   548 _ADC0H	=	0x00bf
                           0000C0   549 G$SMB0CN$0$0 == 0x00c0
                           0000C0   550 _SMB0CN	=	0x00c0
                           0000C0   551 G$CAN0STA$0$0 == 0x00c0
                           0000C0   552 _CAN0STA	=	0x00c0
                           0000C1   553 G$SMB0STA$0$0 == 0x00c1
                           0000C1   554 _SMB0STA	=	0x00c1
                           0000C2   555 G$SMB0DAT$0$0 == 0x00c2
                           0000C2   556 _SMB0DAT	=	0x00c2
                           0000C3   557 G$SMB0ADR$0$0 == 0x00c3
                           0000C3   558 _SMB0ADR	=	0x00c3
                           0000C4   559 G$ADC0GTL$0$0 == 0x00c4
                           0000C4   560 _ADC0GTL	=	0x00c4
                           0000C4   561 G$ADC2GT$0$0 == 0x00c4
                           0000C4   562 _ADC2GT	=	0x00c4
                           0000C5   563 G$ADC0GTH$0$0 == 0x00c5
                           0000C5   564 _ADC0GTH	=	0x00c5
                           0000C6   565 G$ADC0LTL$0$0 == 0x00c6
                           0000C6   566 _ADC0LTL	=	0x00c6
                           0000C6   567 G$ADC2LT$0$0 == 0x00c6
                           0000C6   568 _ADC2LT	=	0x00c6
                           0000C7   569 G$ADC0LTH$0$0 == 0x00c7
                           0000C7   570 _ADC0LTH	=	0x00c7
                           0000C8   571 G$TMR2CN$0$0 == 0x00c8
                           0000C8   572 _TMR2CN	=	0x00c8
                           0000C8   573 G$TMR3CN$0$0 == 0x00c8
                           0000C8   574 _TMR3CN	=	0x00c8
                           0000C8   575 G$TMR4CN$0$0 == 0x00c8
                           0000C8   576 _TMR4CN	=	0x00c8
                           0000C8   577 G$P4$0$0 == 0x00c8
                           0000C8   578 _P4	=	0x00c8
                           0000C9   579 G$TMR2CF$0$0 == 0x00c9
                           0000C9   580 _TMR2CF	=	0x00c9
                           0000C9   581 G$TMR3CF$0$0 == 0x00c9
                           0000C9   582 _TMR3CF	=	0x00c9
                           0000C9   583 G$TMR4CF$0$0 == 0x00c9
                           0000C9   584 _TMR4CF	=	0x00c9
                           0000CA   585 G$RCAP2L$0$0 == 0x00ca
                           0000CA   586 _RCAP2L	=	0x00ca
                           0000CA   587 G$RCAP3L$0$0 == 0x00ca
                           0000CA   588 _RCAP3L	=	0x00ca
                           0000CA   589 G$RCAP4L$0$0 == 0x00ca
                           0000CA   590 _RCAP4L	=	0x00ca
                           0000CB   591 G$RCAP2H$0$0 == 0x00cb
                           0000CB   592 _RCAP2H	=	0x00cb
                           0000CB   593 G$RCAP3H$0$0 == 0x00cb
                           0000CB   594 _RCAP3H	=	0x00cb
                           0000CB   595 G$RCAP4H$0$0 == 0x00cb
                           0000CB   596 _RCAP4H	=	0x00cb
                           0000CC   597 G$TMR2L$0$0 == 0x00cc
                           0000CC   598 _TMR2L	=	0x00cc
                           0000CC   599 G$TMR3L$0$0 == 0x00cc
                           0000CC   600 _TMR3L	=	0x00cc
                           0000CC   601 G$TMR4L$0$0 == 0x00cc
                           0000CC   602 _TMR4L	=	0x00cc
                           0000CD   603 G$TMR2H$0$0 == 0x00cd
                           0000CD   604 _TMR2H	=	0x00cd
                           0000CD   605 G$TMR3H$0$0 == 0x00cd
                           0000CD   606 _TMR3H	=	0x00cd
                           0000CD   607 G$TMR4H$0$0 == 0x00cd
                           0000CD   608 _TMR4H	=	0x00cd
                           0000CF   609 G$SMB0CR$0$0 == 0x00cf
                           0000CF   610 _SMB0CR	=	0x00cf
                           0000D0   611 G$PSW$0$0 == 0x00d0
                           0000D0   612 _PSW	=	0x00d0
                           0000D1   613 G$REF0CN$0$0 == 0x00d1
                           0000D1   614 _REF0CN	=	0x00d1
                           0000D2   615 G$DAC0L$0$0 == 0x00d2
                           0000D2   616 _DAC0L	=	0x00d2
                           0000D2   617 G$DAC1L$0$0 == 0x00d2
                           0000D2   618 _DAC1L	=	0x00d2
                           0000D3   619 G$DAC0H$0$0 == 0x00d3
                           0000D3   620 _DAC0H	=	0x00d3
                           0000D3   621 G$DAC1H$0$0 == 0x00d3
                           0000D3   622 _DAC1H	=	0x00d3
                           0000D4   623 G$DAC0CN$0$0 == 0x00d4
                           0000D4   624 _DAC0CN	=	0x00d4
                           0000D4   625 G$DAC1CN$0$0 == 0x00d4
                           0000D4   626 _DAC1CN	=	0x00d4
                           0000D6   627 G$HVA0CN$0$0 == 0x00d6
                           0000D6   628 _HVA0CN	=	0x00d6
                           0000D8   629 G$PCA0CN$0$0 == 0x00d8
                           0000D8   630 _PCA0CN	=	0x00d8
                           0000D8   631 G$CAN0DATL$0$0 == 0x00d8
                           0000D8   632 _CAN0DATL	=	0x00d8
                           0000D8   633 G$P5$0$0 == 0x00d8
                           0000D8   634 _P5	=	0x00d8
                           0000D9   635 G$PCA0MD$0$0 == 0x00d9
                           0000D9   636 _PCA0MD	=	0x00d9
                           0000D9   637 G$CAN0DATH$0$0 == 0x00d9
                           0000D9   638 _CAN0DATH	=	0x00d9
                           0000DA   639 G$PCA0CPM0$0$0 == 0x00da
                           0000DA   640 _PCA0CPM0	=	0x00da
                           0000DA   641 G$CAN0ADR$0$0 == 0x00da
                           0000DA   642 _CAN0ADR	=	0x00da
                           0000DB   643 G$PCA0CPM1$0$0 == 0x00db
                           0000DB   644 _PCA0CPM1	=	0x00db
                           0000DB   645 G$CAN0TST$0$0 == 0x00db
                           0000DB   646 _CAN0TST	=	0x00db
                           0000DC   647 G$PCA0CPM2$0$0 == 0x00dc
                           0000DC   648 _PCA0CPM2	=	0x00dc
                           0000DD   649 G$PCA0CPM3$0$0 == 0x00dd
                           0000DD   650 _PCA0CPM3	=	0x00dd
                           0000DE   651 G$PCA0CPM4$0$0 == 0x00de
                           0000DE   652 _PCA0CPM4	=	0x00de
                           0000DF   653 G$PCA0CPM5$0$0 == 0x00df
                           0000DF   654 _PCA0CPM5	=	0x00df
                           0000E0   655 G$ACC$0$0 == 0x00e0
                           0000E0   656 _ACC	=	0x00e0
                           0000E1   657 G$PCA0CPL5$0$0 == 0x00e1
                           0000E1   658 _PCA0CPL5	=	0x00e1
                           0000E1   659 G$XBR0$0$0 == 0x00e1
                           0000E1   660 _XBR0	=	0x00e1
                           0000E2   661 G$PCA0CPH5$0$0 == 0x00e2
                           0000E2   662 _PCA0CPH5	=	0x00e2
                           0000E2   663 G$XBR1$0$0 == 0x00e2
                           0000E2   664 _XBR1	=	0x00e2
                           0000E3   665 G$XBR2$0$0 == 0x00e3
                           0000E3   666 _XBR2	=	0x00e3
                           0000E4   667 G$XBR3$0$0 == 0x00e4
                           0000E4   668 _XBR3	=	0x00e4
                           0000E6   669 G$EIE1$0$0 == 0x00e6
                           0000E6   670 _EIE1	=	0x00e6
                           0000E7   671 G$EIE2$0$0 == 0x00e7
                           0000E7   672 _EIE2	=	0x00e7
                           0000E8   673 G$ADC0CN$0$0 == 0x00e8
                           0000E8   674 _ADC0CN	=	0x00e8
                           0000E8   675 G$ADC2CN$0$0 == 0x00e8
                           0000E8   676 _ADC2CN	=	0x00e8
                           0000E8   677 G$P6$0$0 == 0x00e8
                           0000E8   678 _P6	=	0x00e8
                           0000E9   679 G$PCA0CPL2$0$0 == 0x00e9
                           0000E9   680 _PCA0CPL2	=	0x00e9
                           0000EA   681 G$PCA0CPH2$0$0 == 0x00ea
                           0000EA   682 _PCA0CPH2	=	0x00ea
                           0000EB   683 G$PCA0CPL3$0$0 == 0x00eb
                           0000EB   684 _PCA0CPL3	=	0x00eb
                           0000EC   685 G$PCA0CPH3$0$0 == 0x00ec
                           0000EC   686 _PCA0CPH3	=	0x00ec
                           0000ED   687 G$PCA0CPL4$0$0 == 0x00ed
                           0000ED   688 _PCA0CPL4	=	0x00ed
                           0000EE   689 G$PCA0CPH4$0$0 == 0x00ee
                           0000EE   690 _PCA0CPH4	=	0x00ee
                           0000EF   691 G$RSTSRC$0$0 == 0x00ef
                           0000EF   692 _RSTSRC	=	0x00ef
                           0000F0   693 G$B$0$0 == 0x00f0
                           0000F0   694 _B	=	0x00f0
                           0000F6   695 G$EIP1$0$0 == 0x00f6
                           0000F6   696 _EIP1	=	0x00f6
                           0000F7   697 G$EIP2$0$0 == 0x00f7
                           0000F7   698 _EIP2	=	0x00f7
                           0000F8   699 G$SPI0CN$0$0 == 0x00f8
                           0000F8   700 _SPI0CN	=	0x00f8
                           0000F8   701 G$CAN0CN$0$0 == 0x00f8
                           0000F8   702 _CAN0CN	=	0x00f8
                           0000F8   703 G$P7$0$0 == 0x00f8
                           0000F8   704 _P7	=	0x00f8
                           0000F9   705 G$PCA0L$0$0 == 0x00f9
                           0000F9   706 _PCA0L	=	0x00f9
                           0000FA   707 G$PCA0H$0$0 == 0x00fa
                           0000FA   708 _PCA0H	=	0x00fa
                           0000FB   709 G$PCA0CPL0$0$0 == 0x00fb
                           0000FB   710 _PCA0CPL0	=	0x00fb
                           0000FC   711 G$PCA0CPH0$0$0 == 0x00fc
                           0000FC   712 _PCA0CPH0	=	0x00fc
                           0000FD   713 G$PCA0CPL1$0$0 == 0x00fd
                           0000FD   714 _PCA0CPL1	=	0x00fd
                           0000FE   715 G$PCA0CPH1$0$0 == 0x00fe
                           0000FE   716 _PCA0CPH1	=	0x00fe
                           0000FF   717 G$WDTCN$0$0 == 0x00ff
                           0000FF   718 _WDTCN	=	0x00ff
                           00FAF9   719 G$PCA0$0$0 == 0xfaf9
                           00FAF9   720 _PCA0	=	0xfaf9
                           00FCFB   721 G$PCA0CP0$0$0 == 0xfcfb
                           00FCFB   722 _PCA0CP0	=	0xfcfb
                           00FEFD   723 G$PCA0CP1$0$0 == 0xfefd
                           00FEFD   724 _PCA0CP1	=	0xfefd
                           00EAE9   725 G$PCA0CP2$0$0 == 0xeae9
                           00EAE9   726 _PCA0CP2	=	0xeae9
                           00ECEB   727 G$PCA0CP3$0$0 == 0xeceb
                           00ECEB   728 _PCA0CP3	=	0xeceb
                           00EEED   729 G$PCA0CP4$0$0 == 0xeeed
                           00EEED   730 _PCA0CP4	=	0xeeed
                           00E2E1   731 G$PCA0CP5$0$0 == 0xe2e1
                           00E2E1   732 _PCA0CP5	=	0xe2e1
                           00D9D8   733 G$CAN0DAT$0$0 == 0xd9d8
                           00D9D8   734 _CAN0DAT	=	0xd9d8
                           00D3D2   735 G$DAC0$0$0 == 0xd3d2
                           00D3D2   736 _DAC0	=	0xd3d2
                           00D3D2   737 G$DAC1$0$0 == 0xd3d2
                           00D3D2   738 _DAC1	=	0xd3d2
                           00CBCA   739 G$RCAP2$0$0 == 0xcbca
                           00CBCA   740 _RCAP2	=	0xcbca
                           00CBCA   741 G$RCAP3$0$0 == 0xcbca
                           00CBCA   742 _RCAP3	=	0xcbca
                           00CBCA   743 G$RCAP4$0$0 == 0xcbca
                           00CBCA   744 _RCAP4	=	0xcbca
                           00CDCC   745 G$TMR2$0$0 == 0xcdcc
                           00CDCC   746 _TMR2	=	0xcdcc
                           00CDCC   747 G$TMR3$0$0 == 0xcdcc
                           00CDCC   748 _TMR3	=	0xcdcc
                           00CDCC   749 G$TMR4$0$0 == 0xcdcc
                           00CDCC   750 _TMR4	=	0xcdcc
                           00C5C4   751 G$ADC0GT$0$0 == 0xc5c4
                           00C5C4   752 _ADC0GT	=	0xc5c4
                           00C7C6   753 G$ADC0LT$0$0 == 0xc7c6
                           00C7C6   754 _ADC0LT	=	0xc7c6
                           00BFBE   755 G$ADC0$0$0 == 0xbfbe
                           00BFBE   756 _ADC0	=	0xbfbe
                           008382   757 G$DP$0$0 == 0x8382
                           008382   758 _DP	=	0x8382
                           0000A2   759 G$_XPAGE$0$0 == 0x00a2
                           0000A2   760 __XPAGE	=	0x00a2
                                    761 ;--------------------------------------------------------
                                    762 ; special function bits
                                    763 ;--------------------------------------------------------
                                    764 	.area RSEG    (ABS,DATA)
      000000                        765 	.org 0x0000
                           000080   766 G$P0_0$0$0 == 0x0080
                           000080   767 _P0_0	=	0x0080
                           000081   768 G$P0_1$0$0 == 0x0081
                           000081   769 _P0_1	=	0x0081
                           000082   770 G$P0_2$0$0 == 0x0082
                           000082   771 _P0_2	=	0x0082
                           000083   772 G$P0_3$0$0 == 0x0083
                           000083   773 _P0_3	=	0x0083
                           000084   774 G$P0_4$0$0 == 0x0084
                           000084   775 _P0_4	=	0x0084
                           000085   776 G$P0_5$0$0 == 0x0085
                           000085   777 _P0_5	=	0x0085
                           000086   778 G$P0_6$0$0 == 0x0086
                           000086   779 _P0_6	=	0x0086
                           000087   780 G$P0_7$0$0 == 0x0087
                           000087   781 _P0_7	=	0x0087
                           000090   782 G$P1_0$0$0 == 0x0090
                           000090   783 _P1_0	=	0x0090
                           000091   784 G$P1_1$0$0 == 0x0091
                           000091   785 _P1_1	=	0x0091
                           000092   786 G$P1_2$0$0 == 0x0092
                           000092   787 _P1_2	=	0x0092
                           000093   788 G$P1_3$0$0 == 0x0093
                           000093   789 _P1_3	=	0x0093
                           000094   790 G$P1_4$0$0 == 0x0094
                           000094   791 _P1_4	=	0x0094
                           000095   792 G$P1_5$0$0 == 0x0095
                           000095   793 _P1_5	=	0x0095
                           000096   794 G$P1_6$0$0 == 0x0096
                           000096   795 _P1_6	=	0x0096
                           000097   796 G$P1_7$0$0 == 0x0097
                           000097   797 _P1_7	=	0x0097
                           0000A0   798 G$P2_0$0$0 == 0x00a0
                           0000A0   799 _P2_0	=	0x00a0
                           0000A1   800 G$P2_1$0$0 == 0x00a1
                           0000A1   801 _P2_1	=	0x00a1
                           0000A2   802 G$P2_2$0$0 == 0x00a2
                           0000A2   803 _P2_2	=	0x00a2
                           0000A3   804 G$P2_3$0$0 == 0x00a3
                           0000A3   805 _P2_3	=	0x00a3
                           0000A4   806 G$P2_4$0$0 == 0x00a4
                           0000A4   807 _P2_4	=	0x00a4
                           0000A5   808 G$P2_5$0$0 == 0x00a5
                           0000A5   809 _P2_5	=	0x00a5
                           0000A6   810 G$P2_6$0$0 == 0x00a6
                           0000A6   811 _P2_6	=	0x00a6
                           0000A7   812 G$P2_7$0$0 == 0x00a7
                           0000A7   813 _P2_7	=	0x00a7
                           0000B0   814 G$P3_0$0$0 == 0x00b0
                           0000B0   815 _P3_0	=	0x00b0
                           0000B1   816 G$P3_1$0$0 == 0x00b1
                           0000B1   817 _P3_1	=	0x00b1
                           0000B2   818 G$P3_2$0$0 == 0x00b2
                           0000B2   819 _P3_2	=	0x00b2
                           0000B3   820 G$P3_3$0$0 == 0x00b3
                           0000B3   821 _P3_3	=	0x00b3
                           0000B4   822 G$P3_4$0$0 == 0x00b4
                           0000B4   823 _P3_4	=	0x00b4
                           0000B5   824 G$P3_5$0$0 == 0x00b5
                           0000B5   825 _P3_5	=	0x00b5
                           0000B6   826 G$P3_6$0$0 == 0x00b6
                           0000B6   827 _P3_6	=	0x00b6
                           0000B7   828 G$P3_7$0$0 == 0x00b7
                           0000B7   829 _P3_7	=	0x00b7
                           0000C8   830 G$P4_0$0$0 == 0x00c8
                           0000C8   831 _P4_0	=	0x00c8
                           0000C9   832 G$P4_1$0$0 == 0x00c9
                           0000C9   833 _P4_1	=	0x00c9
                           0000CA   834 G$P4_2$0$0 == 0x00ca
                           0000CA   835 _P4_2	=	0x00ca
                           0000CB   836 G$P4_3$0$0 == 0x00cb
                           0000CB   837 _P4_3	=	0x00cb
                           0000CC   838 G$P4_4$0$0 == 0x00cc
                           0000CC   839 _P4_4	=	0x00cc
                           0000CD   840 G$P4_5$0$0 == 0x00cd
                           0000CD   841 _P4_5	=	0x00cd
                           0000CE   842 G$P4_6$0$0 == 0x00ce
                           0000CE   843 _P4_6	=	0x00ce
                           0000CF   844 G$P4_7$0$0 == 0x00cf
                           0000CF   845 _P4_7	=	0x00cf
                           0000D8   846 G$P5_0$0$0 == 0x00d8
                           0000D8   847 _P5_0	=	0x00d8
                           0000D9   848 G$P5_1$0$0 == 0x00d9
                           0000D9   849 _P5_1	=	0x00d9
                           0000DA   850 G$P5_2$0$0 == 0x00da
                           0000DA   851 _P5_2	=	0x00da
                           0000DB   852 G$P5_3$0$0 == 0x00db
                           0000DB   853 _P5_3	=	0x00db
                           0000DC   854 G$P5_4$0$0 == 0x00dc
                           0000DC   855 _P5_4	=	0x00dc
                           0000DD   856 G$P5_5$0$0 == 0x00dd
                           0000DD   857 _P5_5	=	0x00dd
                           0000DE   858 G$P5_6$0$0 == 0x00de
                           0000DE   859 _P5_6	=	0x00de
                           0000DF   860 G$P5_7$0$0 == 0x00df
                           0000DF   861 _P5_7	=	0x00df
                           0000E8   862 G$P6_0$0$0 == 0x00e8
                           0000E8   863 _P6_0	=	0x00e8
                           0000E9   864 G$P6_1$0$0 == 0x00e9
                           0000E9   865 _P6_1	=	0x00e9
                           0000EA   866 G$P6_2$0$0 == 0x00ea
                           0000EA   867 _P6_2	=	0x00ea
                           0000EB   868 G$P6_3$0$0 == 0x00eb
                           0000EB   869 _P6_3	=	0x00eb
                           0000EC   870 G$P6_4$0$0 == 0x00ec
                           0000EC   871 _P6_4	=	0x00ec
                           0000ED   872 G$P6_5$0$0 == 0x00ed
                           0000ED   873 _P6_5	=	0x00ed
                           0000EE   874 G$P6_6$0$0 == 0x00ee
                           0000EE   875 _P6_6	=	0x00ee
                           0000EF   876 G$P6_7$0$0 == 0x00ef
                           0000EF   877 _P6_7	=	0x00ef
                           0000F8   878 G$P7_0$0$0 == 0x00f8
                           0000F8   879 _P7_0	=	0x00f8
                           0000F9   880 G$P7_1$0$0 == 0x00f9
                           0000F9   881 _P7_1	=	0x00f9
                           0000FA   882 G$P7_2$0$0 == 0x00fa
                           0000FA   883 _P7_2	=	0x00fa
                           0000FB   884 G$P7_3$0$0 == 0x00fb
                           0000FB   885 _P7_3	=	0x00fb
                           0000FC   886 G$P7_4$0$0 == 0x00fc
                           0000FC   887 _P7_4	=	0x00fc
                           0000FD   888 G$P7_5$0$0 == 0x00fd
                           0000FD   889 _P7_5	=	0x00fd
                           0000FE   890 G$P7_6$0$0 == 0x00fe
                           0000FE   891 _P7_6	=	0x00fe
                           0000FF   892 G$P7_7$0$0 == 0x00ff
                           0000FF   893 _P7_7	=	0x00ff
                           00008F   894 G$TF1$0$0 == 0x008f
                           00008F   895 _TF1	=	0x008f
                           00008E   896 G$TR1$0$0 == 0x008e
                           00008E   897 _TR1	=	0x008e
                           00008D   898 G$TF0$0$0 == 0x008d
                           00008D   899 _TF0	=	0x008d
                           00008C   900 G$TR0$0$0 == 0x008c
                           00008C   901 _TR0	=	0x008c
                           00008B   902 G$IE1$0$0 == 0x008b
                           00008B   903 _IE1	=	0x008b
                           00008A   904 G$IT1$0$0 == 0x008a
                           00008A   905 _IT1	=	0x008a
                           000089   906 G$IE0$0$0 == 0x0089
                           000089   907 _IE0	=	0x0089
                           000088   908 G$IT0$0$0 == 0x0088
                           000088   909 _IT0	=	0x0088
                           00008F   910 G$CP0EN$0$0 == 0x008f
                           00008F   911 _CP0EN	=	0x008f
                           00008E   912 G$CP0OUT$0$0 == 0x008e
                           00008E   913 _CP0OUT	=	0x008e
                           00008D   914 G$CP0RIF$0$0 == 0x008d
                           00008D   915 _CP0RIF	=	0x008d
                           00008C   916 G$CP0FIF$0$0 == 0x008c
                           00008C   917 _CP0FIF	=	0x008c
                           00008B   918 G$CP0HYP1$0$0 == 0x008b
                           00008B   919 _CP0HYP1	=	0x008b
                           00008A   920 G$CP0HYP0$0$0 == 0x008a
                           00008A   921 _CP0HYP0	=	0x008a
                           000089   922 G$CP0HYN1$0$0 == 0x0089
                           000089   923 _CP0HYN1	=	0x0089
                           000088   924 G$CP0HYN0$0$0 == 0x0088
                           000088   925 _CP0HYN0	=	0x0088
                           00008F   926 G$CP1EN$0$0 == 0x008f
                           00008F   927 _CP1EN	=	0x008f
                           00008E   928 G$CP1OUT$0$0 == 0x008e
                           00008E   929 _CP1OUT	=	0x008e
                           00008D   930 G$CP1RIF$0$0 == 0x008d
                           00008D   931 _CP1RIF	=	0x008d
                           00008C   932 G$CP1FIF$0$0 == 0x008c
                           00008C   933 _CP1FIF	=	0x008c
                           00008B   934 G$CP1HYP1$0$0 == 0x008b
                           00008B   935 _CP1HYP1	=	0x008b
                           00008A   936 G$CP1HYP0$0$0 == 0x008a
                           00008A   937 _CP1HYP0	=	0x008a
                           000089   938 G$CP1HYN1$0$0 == 0x0089
                           000089   939 _CP1HYN1	=	0x0089
                           000088   940 G$CP1HYN0$0$0 == 0x0088
                           000088   941 _CP1HYN0	=	0x0088
                           00008F   942 G$CP2EN$0$0 == 0x008f
                           00008F   943 _CP2EN	=	0x008f
                           00008E   944 G$CP2OUT$0$0 == 0x008e
                           00008E   945 _CP2OUT	=	0x008e
                           00008D   946 G$CP2RIF$0$0 == 0x008d
                           00008D   947 _CP2RIF	=	0x008d
                           00008C   948 G$CP2FIF$0$0 == 0x008c
                           00008C   949 _CP2FIF	=	0x008c
                           00008B   950 G$CP2HYP1$0$0 == 0x008b
                           00008B   951 _CP2HYP1	=	0x008b
                           00008A   952 G$CP2HYP0$0$0 == 0x008a
                           00008A   953 _CP2HYP0	=	0x008a
                           000089   954 G$CP2HYN1$0$0 == 0x0089
                           000089   955 _CP2HYN1	=	0x0089
                           000088   956 G$CP2HYN0$0$0 == 0x0088
                           000088   957 _CP2HYN0	=	0x0088
                           00009F   958 G$SM00$0$0 == 0x009f
                           00009F   959 _SM00	=	0x009f
                           00009E   960 G$SM10$0$0 == 0x009e
                           00009E   961 _SM10	=	0x009e
                           00009D   962 G$SM20$0$0 == 0x009d
                           00009D   963 _SM20	=	0x009d
                           00009C   964 G$REN0$0$0 == 0x009c
                           00009C   965 _REN0	=	0x009c
                           00009B   966 G$TB80$0$0 == 0x009b
                           00009B   967 _TB80	=	0x009b
                           00009A   968 G$RB80$0$0 == 0x009a
                           00009A   969 _RB80	=	0x009a
                           000099   970 G$TI0$0$0 == 0x0099
                           000099   971 _TI0	=	0x0099
                           000098   972 G$RI0$0$0 == 0x0098
                           000098   973 _RI0	=	0x0098
                           00009F   974 G$S1MODE$0$0 == 0x009f
                           00009F   975 _S1MODE	=	0x009f
                           00009D   976 G$MCE1$0$0 == 0x009d
                           00009D   977 _MCE1	=	0x009d
                           00009C   978 G$REN1$0$0 == 0x009c
                           00009C   979 _REN1	=	0x009c
                           00009B   980 G$TB81$0$0 == 0x009b
                           00009B   981 _TB81	=	0x009b
                           00009A   982 G$RB81$0$0 == 0x009a
                           00009A   983 _RB81	=	0x009a
                           000099   984 G$TI1$0$0 == 0x0099
                           000099   985 _TI1	=	0x0099
                           000098   986 G$RI1$0$0 == 0x0098
                           000098   987 _RI1	=	0x0098
                           0000AF   988 G$EA$0$0 == 0x00af
                           0000AF   989 _EA	=	0x00af
                           0000AD   990 G$ET2$0$0 == 0x00ad
                           0000AD   991 _ET2	=	0x00ad
                           0000AC   992 G$ES0$0$0 == 0x00ac
                           0000AC   993 _ES0	=	0x00ac
                           0000AB   994 G$ET1$0$0 == 0x00ab
                           0000AB   995 _ET1	=	0x00ab
                           0000AA   996 G$EX1$0$0 == 0x00aa
                           0000AA   997 _EX1	=	0x00aa
                           0000A9   998 G$ET0$0$0 == 0x00a9
                           0000A9   999 _ET0	=	0x00a9
                           0000A8  1000 G$EX0$0$0 == 0x00a8
                           0000A8  1001 _EX0	=	0x00a8
                           0000BD  1002 G$PT2$0$0 == 0x00bd
                           0000BD  1003 _PT2	=	0x00bd
                           0000BC  1004 G$PS0$0$0 == 0x00bc
                           0000BC  1005 _PS0	=	0x00bc
                           0000BB  1006 G$PT1$0$0 == 0x00bb
                           0000BB  1007 _PT1	=	0x00bb
                           0000BA  1008 G$PX1$0$0 == 0x00ba
                           0000BA  1009 _PX1	=	0x00ba
                           0000B9  1010 G$PT0$0$0 == 0x00b9
                           0000B9  1011 _PT0	=	0x00b9
                           0000B8  1012 G$PX0$0$0 == 0x00b8
                           0000B8  1013 _PX0	=	0x00b8
                           0000C7  1014 G$BUSY$0$0 == 0x00c7
                           0000C7  1015 _BUSY	=	0x00c7
                           0000C6  1016 G$ENSMB$0$0 == 0x00c6
                           0000C6  1017 _ENSMB	=	0x00c6
                           0000C5  1018 G$STA$0$0 == 0x00c5
                           0000C5  1019 _STA	=	0x00c5
                           0000C4  1020 G$STO$0$0 == 0x00c4
                           0000C4  1021 _STO	=	0x00c4
                           0000C3  1022 G$SI$0$0 == 0x00c3
                           0000C3  1023 _SI	=	0x00c3
                           0000C2  1024 G$AA$0$0 == 0x00c2
                           0000C2  1025 _AA	=	0x00c2
                           0000C1  1026 G$SMBFTE$0$0 == 0x00c1
                           0000C1  1027 _SMBFTE	=	0x00c1
                           0000C0  1028 G$SMBTOE$0$0 == 0x00c0
                           0000C0  1029 _SMBTOE	=	0x00c0
                           0000C7  1030 G$BOFF$0$0 == 0x00c7
                           0000C7  1031 _BOFF	=	0x00c7
                           0000C6  1032 G$EWARN$0$0 == 0x00c6
                           0000C6  1033 _EWARN	=	0x00c6
                           0000C5  1034 G$EPASS$0$0 == 0x00c5
                           0000C5  1035 _EPASS	=	0x00c5
                           0000C4  1036 G$RXOK$0$0 == 0x00c4
                           0000C4  1037 _RXOK	=	0x00c4
                           0000C3  1038 G$TXOK$0$0 == 0x00c3
                           0000C3  1039 _TXOK	=	0x00c3
                           0000C2  1040 G$LEC2$0$0 == 0x00c2
                           0000C2  1041 _LEC2	=	0x00c2
                           0000C1  1042 G$LEC1$0$0 == 0x00c1
                           0000C1  1043 _LEC1	=	0x00c1
                           0000C0  1044 G$LEC0$0$0 == 0x00c0
                           0000C0  1045 _LEC0	=	0x00c0
                           0000CF  1046 G$TF2$0$0 == 0x00cf
                           0000CF  1047 _TF2	=	0x00cf
                           0000CE  1048 G$EXF2$0$0 == 0x00ce
                           0000CE  1049 _EXF2	=	0x00ce
                           0000CB  1050 G$EXEN2$0$0 == 0x00cb
                           0000CB  1051 _EXEN2	=	0x00cb
                           0000CA  1052 G$TR2$0$0 == 0x00ca
                           0000CA  1053 _TR2	=	0x00ca
                           0000C9  1054 G$CT2$0$0 == 0x00c9
                           0000C9  1055 _CT2	=	0x00c9
                           0000C8  1056 G$CPRL2$0$0 == 0x00c8
                           0000C8  1057 _CPRL2	=	0x00c8
                           0000CF  1058 G$TF3$0$0 == 0x00cf
                           0000CF  1059 _TF3	=	0x00cf
                           0000CE  1060 G$EXF3$0$0 == 0x00ce
                           0000CE  1061 _EXF3	=	0x00ce
                           0000CB  1062 G$EXEN3$0$0 == 0x00cb
                           0000CB  1063 _EXEN3	=	0x00cb
                           0000CA  1064 G$TR3$0$0 == 0x00ca
                           0000CA  1065 _TR3	=	0x00ca
                           0000C9  1066 G$CT3$0$0 == 0x00c9
                           0000C9  1067 _CT3	=	0x00c9
                           0000C8  1068 G$CPRL3$0$0 == 0x00c8
                           0000C8  1069 _CPRL3	=	0x00c8
                           0000CF  1070 G$TF4$0$0 == 0x00cf
                           0000CF  1071 _TF4	=	0x00cf
                           0000CE  1072 G$EXF4$0$0 == 0x00ce
                           0000CE  1073 _EXF4	=	0x00ce
                           0000CB  1074 G$EXEN4$0$0 == 0x00cb
                           0000CB  1075 _EXEN4	=	0x00cb
                           0000CA  1076 G$TR4$0$0 == 0x00ca
                           0000CA  1077 _TR4	=	0x00ca
                           0000C9  1078 G$CT4$0$0 == 0x00c9
                           0000C9  1079 _CT4	=	0x00c9
                           0000C8  1080 G$CPRL4$0$0 == 0x00c8
                           0000C8  1081 _CPRL4	=	0x00c8
                           0000D7  1082 G$CY$0$0 == 0x00d7
                           0000D7  1083 _CY	=	0x00d7
                           0000D6  1084 G$AC$0$0 == 0x00d6
                           0000D6  1085 _AC	=	0x00d6
                           0000D5  1086 G$F0$0$0 == 0x00d5
                           0000D5  1087 _F0	=	0x00d5
                           0000D4  1088 G$RS1$0$0 == 0x00d4
                           0000D4  1089 _RS1	=	0x00d4
                           0000D3  1090 G$RS0$0$0 == 0x00d3
                           0000D3  1091 _RS0	=	0x00d3
                           0000D2  1092 G$OV$0$0 == 0x00d2
                           0000D2  1093 _OV	=	0x00d2
                           0000D1  1094 G$F1$0$0 == 0x00d1
                           0000D1  1095 _F1	=	0x00d1
                           0000D0  1096 G$P$0$0 == 0x00d0
                           0000D0  1097 _P	=	0x00d0
                           0000DF  1098 G$CF$0$0 == 0x00df
                           0000DF  1099 _CF	=	0x00df
                           0000DE  1100 G$CR$0$0 == 0x00de
                           0000DE  1101 _CR	=	0x00de
                           0000DD  1102 G$CCF5$0$0 == 0x00dd
                           0000DD  1103 _CCF5	=	0x00dd
                           0000DC  1104 G$CCF4$0$0 == 0x00dc
                           0000DC  1105 _CCF4	=	0x00dc
                           0000DB  1106 G$CCF3$0$0 == 0x00db
                           0000DB  1107 _CCF3	=	0x00db
                           0000DA  1108 G$CCF2$0$0 == 0x00da
                           0000DA  1109 _CCF2	=	0x00da
                           0000D9  1110 G$CCF1$0$0 == 0x00d9
                           0000D9  1111 _CCF1	=	0x00d9
                           0000D8  1112 G$CCF0$0$0 == 0x00d8
                           0000D8  1113 _CCF0	=	0x00d8
                           0000EF  1114 G$AD0EN$0$0 == 0x00ef
                           0000EF  1115 _AD0EN	=	0x00ef
                           0000EE  1116 G$AD0TM$0$0 == 0x00ee
                           0000EE  1117 _AD0TM	=	0x00ee
                           0000ED  1118 G$AD0INT$0$0 == 0x00ed
                           0000ED  1119 _AD0INT	=	0x00ed
                           0000EC  1120 G$AD0BUSY$0$0 == 0x00ec
                           0000EC  1121 _AD0BUSY	=	0x00ec
                           0000EB  1122 G$AD0CM1$0$0 == 0x00eb
                           0000EB  1123 _AD0CM1	=	0x00eb
                           0000EA  1124 G$AD0CM0$0$0 == 0x00ea
                           0000EA  1125 _AD0CM0	=	0x00ea
                           0000E9  1126 G$AD0WINT$0$0 == 0x00e9
                           0000E9  1127 _AD0WINT	=	0x00e9
                           0000E8  1128 G$AD0LJST$0$0 == 0x00e8
                           0000E8  1129 _AD0LJST	=	0x00e8
                           0000EF  1130 G$AD2EN$0$0 == 0x00ef
                           0000EF  1131 _AD2EN	=	0x00ef
                           0000EE  1132 G$AD2TM$0$0 == 0x00ee
                           0000EE  1133 _AD2TM	=	0x00ee
                           0000ED  1134 G$AD2INT$0$0 == 0x00ed
                           0000ED  1135 _AD2INT	=	0x00ed
                           0000EC  1136 G$AD2BUSY$0$0 == 0x00ec
                           0000EC  1137 _AD2BUSY	=	0x00ec
                           0000EB  1138 G$AD2CM2$0$0 == 0x00eb
                           0000EB  1139 _AD2CM2	=	0x00eb
                           0000EA  1140 G$AD2CM1$0$0 == 0x00ea
                           0000EA  1141 _AD2CM1	=	0x00ea
                           0000E9  1142 G$AD2CM0$0$0 == 0x00e9
                           0000E9  1143 _AD2CM0	=	0x00e9
                           0000E8  1144 G$AD2WINT$0$0 == 0x00e8
                           0000E8  1145 _AD2WINT	=	0x00e8
                           0000FF  1146 G$SPIF$0$0 == 0x00ff
                           0000FF  1147 _SPIF	=	0x00ff
                           0000FE  1148 G$WCOL$0$0 == 0x00fe
                           0000FE  1149 _WCOL	=	0x00fe
                           0000FD  1150 G$MODF$0$0 == 0x00fd
                           0000FD  1151 _MODF	=	0x00fd
                           0000FC  1152 G$RXOVRN$0$0 == 0x00fc
                           0000FC  1153 _RXOVRN	=	0x00fc
                           0000FB  1154 G$NSSMD1$0$0 == 0x00fb
                           0000FB  1155 _NSSMD1	=	0x00fb
                           0000FA  1156 G$NSSMD0$0$0 == 0x00fa
                           0000FA  1157 _NSSMD0	=	0x00fa
                           0000F9  1158 G$TXBMT$0$0 == 0x00f9
                           0000F9  1159 _TXBMT	=	0x00f9
                           0000F8  1160 G$SPIEN$0$0 == 0x00f8
                           0000F8  1161 _SPIEN	=	0x00f8
                           0000F8  1162 G$CANINIT$0$0 == 0x00f8
                           0000F8  1163 _CANINIT	=	0x00f8
                           0000F9  1164 G$CANIE$0$0 == 0x00f9
                           0000F9  1165 _CANIE	=	0x00f9
                           0000FA  1166 G$CANSIE$0$0 == 0x00fa
                           0000FA  1167 _CANSIE	=	0x00fa
                           0000FB  1168 G$CANEIE$0$0 == 0x00fb
                           0000FB  1169 _CANEIE	=	0x00fb
                           0000FC  1170 G$CANIF$0$0 == 0x00fc
                           0000FC  1171 _CANIF	=	0x00fc
                           0000FD  1172 G$CANDAR$0$0 == 0x00fd
                           0000FD  1173 _CANDAR	=	0x00fd
                           0000FE  1174 G$CANCCE$0$0 == 0x00fe
                           0000FE  1175 _CANCCE	=	0x00fe
                           0000FF  1176 G$CANTEST$0$0 == 0x00ff
                           0000FF  1177 _CANTEST	=	0x00ff
                                   1178 ;--------------------------------------------------------
                                   1179 ; overlayable register banks
                                   1180 ;--------------------------------------------------------
                                   1181 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                       1182 	.ds 8
                                   1183 ;--------------------------------------------------------
                                   1184 ; internal ram data
                                   1185 ;--------------------------------------------------------
                                   1186 	.area DSEG    (DATA)
                           000000  1187 G$alg_E$0$0==.
      000000                       1188 _alg_E::
      000000                       1189 	.ds 1
                           000001  1190 G$alg_D$0$0==.
      000001                       1191 _alg_D::
      000001                       1192 	.ds 1
                           000002  1193 Lmain.sync_disp$cont_algs$1$15==.
      000002                       1194 _sync_disp_cont_algs_1_15:
      000002                       1195 	.ds 1
                                   1196 ;--------------------------------------------------------
                                   1197 ; overlayable items in internal ram 
                                   1198 ;--------------------------------------------------------
                                   1199 	.area	OSEG    (OVR,DATA)
                                   1200 	.area	OSEG    (OVR,DATA)
                                   1201 ;--------------------------------------------------------
                                   1202 ; Stack segment in internal ram 
                                   1203 ;--------------------------------------------------------
                                   1204 	.area	SSEG
      000000                       1205 __start__stack:
      000000                       1206 	.ds	1
                                   1207 
                                   1208 ;--------------------------------------------------------
                                   1209 ; indirectly addressable internal ram data
                                   1210 ;--------------------------------------------------------
                                   1211 	.area ISEG    (DATA)
                                   1212 ;--------------------------------------------------------
                                   1213 ; absolute internal ram data
                                   1214 ;--------------------------------------------------------
                                   1215 	.area IABS    (ABS,DATA)
                                   1216 	.area IABS    (ABS,DATA)
                                   1217 ;--------------------------------------------------------
                                   1218 ; bit data
                                   1219 ;--------------------------------------------------------
                                   1220 	.area BSEG    (BIT)
                                   1221 ;--------------------------------------------------------
                                   1222 ; paged external ram data
                                   1223 ;--------------------------------------------------------
                                   1224 	.area PSEG    (PAG,XDATA)
                                   1225 ;--------------------------------------------------------
                                   1226 ; external ram data
                                   1227 ;--------------------------------------------------------
                                   1228 	.area XSEG    (XDATA)
                                   1229 ;--------------------------------------------------------
                                   1230 ; absolute external ram data
                                   1231 ;--------------------------------------------------------
                                   1232 	.area XABS    (ABS,XDATA)
                                   1233 ;--------------------------------------------------------
                                   1234 ; external initialized ram data
                                   1235 ;--------------------------------------------------------
                                   1236 	.area XISEG   (XDATA)
                                   1237 	.area HOME    (CODE)
                                   1238 	.area GSINIT0 (CODE)
                                   1239 	.area GSINIT1 (CODE)
                                   1240 	.area GSINIT2 (CODE)
                                   1241 	.area GSINIT3 (CODE)
                                   1242 	.area GSINIT4 (CODE)
                                   1243 	.area GSINIT5 (CODE)
                                   1244 	.area GSINIT  (CODE)
                                   1245 	.area GSFINAL (CODE)
                                   1246 	.area CSEG    (CODE)
                                   1247 ;--------------------------------------------------------
                                   1248 ; interrupt vector 
                                   1249 ;--------------------------------------------------------
                                   1250 	.area HOME    (CODE)
      000000                       1251 __interrupt_vect:
      000000 02r00r00         [24] 1252 	ljmp	__sdcc_gsinit_startup
      000003 32               [24] 1253 	reti
      000004                       1254 	.ds	7
      00000B 32               [24] 1255 	reti
      00000C                       1256 	.ds	7
      000013 32               [24] 1257 	reti
      000014                       1258 	.ds	7
      00001B 32               [24] 1259 	reti
      00001C                       1260 	.ds	7
      000023 32               [24] 1261 	reti
      000024                       1262 	.ds	7
      00002B 02r00rC7         [24] 1263 	ljmp	_sync_disp
                                   1264 ;--------------------------------------------------------
                                   1265 ; global & static initialisations
                                   1266 ;--------------------------------------------------------
                                   1267 	.area HOME    (CODE)
                                   1268 	.area GSINIT  (CODE)
                                   1269 	.area GSFINAL (CODE)
                                   1270 	.area GSINIT  (CODE)
                                   1271 	.globl __sdcc_gsinit_startup
                                   1272 	.globl __sdcc_program_startup
                                   1273 	.globl __start__stack
                                   1274 	.globl __mcs51_genXINIT
                                   1275 	.globl __mcs51_genXRAMCLEAR
                                   1276 	.globl __mcs51_genRAMCLEAR
                                   1277 ;------------------------------------------------------------
                                   1278 ;Allocation info for local variables in function 'sync_disp'
                                   1279 ;------------------------------------------------------------
                                   1280 ;cont_algs                 Allocated with name '_sync_disp_cont_algs_1_15'
                                   1281 ;------------------------------------------------------------
                           000000  1282 	G$sync_disp$0$0 ==.
                           000000  1283 	C$main.c$24$1$15 ==.
                                   1284 ;	Z:\micap\display_7\main.c:24: static unsigned char cont_algs = 0;
      000000 75*02 00         [24] 1285 	mov	_sync_disp_cont_algs_1_15,#0x00
                                   1286 	.area GSFINAL (CODE)
      000000 02r00r2E         [24] 1287 	ljmp	__sdcc_program_startup
                                   1288 ;--------------------------------------------------------
                                   1289 ; Home
                                   1290 ;--------------------------------------------------------
                                   1291 	.area HOME    (CODE)
                                   1292 	.area HOME    (CODE)
      00002E                       1293 __sdcc_program_startup:
      00002E 02r01r03         [24] 1294 	ljmp	_main
                                   1295 ;	return from main will return to caller
                                   1296 ;--------------------------------------------------------
                                   1297 ; code
                                   1298 ;--------------------------------------------------------
                                   1299 	.area CSEG    (CODE)
                                   1300 ;------------------------------------------------------------
                                   1301 ;Allocation info for local variables in function 'Reset_Sources_Init'
                                   1302 ;------------------------------------------------------------
                           000000  1303 	G$Reset_Sources_Init$0$0 ==.
                           000000  1304 	C$config.c$10$0$0 ==.
                                   1305 ;	Z:\micap\display_7\/..\/config.c:10: void Reset_Sources_Init()
                                   1306 ;	-----------------------------------------
                                   1307 ;	 function Reset_Sources_Init
                                   1308 ;	-----------------------------------------
      000000                       1309 _Reset_Sources_Init:
                           000007  1310 	ar7 = 0x07
                           000006  1311 	ar6 = 0x06
                           000005  1312 	ar5 = 0x05
                           000004  1313 	ar4 = 0x04
                           000003  1314 	ar3 = 0x03
                           000002  1315 	ar2 = 0x02
                           000001  1316 	ar1 = 0x01
                           000000  1317 	ar0 = 0x00
                           000000  1318 	C$config.c$12$1$1 ==.
                                   1319 ;	Z:\micap\display_7\/..\/config.c:12: WDTCN     = 0xDE;
      000000 75 FF DE         [24] 1320 	mov	_WDTCN,#0xde
                           000003  1321 	C$config.c$13$1$1 ==.
                                   1322 ;	Z:\micap\display_7\/..\/config.c:13: WDTCN     = 0xAD;
      000003 75 FF AD         [24] 1323 	mov	_WDTCN,#0xad
                           000006  1324 	C$config.c$14$1$1 ==.
                           000006  1325 	XG$Reset_Sources_Init$0$0 ==.
      000006 22               [24] 1326 	ret
                                   1327 ;------------------------------------------------------------
                                   1328 ;Allocation info for local variables in function 'Timer_Init'
                                   1329 ;------------------------------------------------------------
                           000007  1330 	G$Timer_Init$0$0 ==.
                           000007  1331 	C$config.c$16$1$1 ==.
                                   1332 ;	Z:\micap\display_7\/..\/config.c:16: void Timer_Init()
                                   1333 ;	-----------------------------------------
                                   1334 ;	 function Timer_Init
                                   1335 ;	-----------------------------------------
      000007                       1336 _Timer_Init:
                           000007  1337 	C$config.c$18$1$2 ==.
                                   1338 ;	Z:\micap\display_7\/..\/config.c:18: SFRPAGE   = TIMER01_PAGE;
      000007 75 84 00         [24] 1339 	mov	_SFRPAGE,#0x00
                           00000A  1340 	C$config.c$19$1$2 ==.
                                   1341 ;	Z:\micap\display_7\/..\/config.c:19: TMOD      = 0x01;
      00000A 75 89 01         [24] 1342 	mov	_TMOD,#0x01
                           00000D  1343 	C$config.c$20$1$2 ==.
                                   1344 ;	Z:\micap\display_7\/..\/config.c:20: CKCON     = 0x08;
      00000D 75 8E 08         [24] 1345 	mov	_CKCON,#0x08
                           000010  1346 	C$config.c$21$1$2 ==.
                           000010  1347 	XG$Timer_Init$0$0 ==.
      000010 22               [24] 1348 	ret
                                   1349 ;------------------------------------------------------------
                                   1350 ;Allocation info for local variables in function 'Port_IO_Init'
                                   1351 ;------------------------------------------------------------
                           000011  1352 	G$Port_IO_Init$0$0 ==.
                           000011  1353 	C$config.c$23$1$2 ==.
                                   1354 ;	Z:\micap\display_7\/..\/config.c:23: void Port_IO_Init()
                                   1355 ;	-----------------------------------------
                                   1356 ;	 function Port_IO_Init
                                   1357 ;	-----------------------------------------
      000011                       1358 _Port_IO_Init:
                           000011  1359 	C$config.c$61$1$3 ==.
                                   1360 ;	Z:\micap\display_7\/..\/config.c:61: SFRPAGE   = CONFIG_PAGE;
      000011 75 84 0F         [24] 1361 	mov	_SFRPAGE,#0x0f
                           000014  1362 	C$config.c$62$1$3 ==.
                                   1363 ;	Z:\micap\display_7\/..\/config.c:62: P0MDOUT   = 0xFF;
      000014 75 A4 FF         [24] 1364 	mov	_P0MDOUT,#0xff
                           000017  1365 	C$config.c$63$1$3 ==.
                                   1366 ;	Z:\micap\display_7\/..\/config.c:63: P1MDOUT   = 0xFF;
      000017 75 A5 FF         [24] 1367 	mov	_P1MDOUT,#0xff
                           00001A  1368 	C$config.c$64$1$3 ==.
                                   1369 ;	Z:\micap\display_7\/..\/config.c:64: P2MDOUT   = 0xFF;
      00001A 75 A6 FF         [24] 1370 	mov	_P2MDOUT,#0xff
                           00001D  1371 	C$config.c$65$1$3 ==.
                                   1372 ;	Z:\micap\display_7\/..\/config.c:65: P3MDOUT   = 0xFF;
      00001D 75 A7 FF         [24] 1373 	mov	_P3MDOUT,#0xff
                           000020  1374 	C$config.c$66$1$3 ==.
                                   1375 ;	Z:\micap\display_7\/..\/config.c:66: P4MDOUT   = 0xFF;
      000020 75 9C FF         [24] 1376 	mov	_P4MDOUT,#0xff
                           000023  1377 	C$config.c$67$1$3 ==.
                                   1378 ;	Z:\micap\display_7\/..\/config.c:67: P5MDOUT   = 0xFF;
      000023 75 9D FF         [24] 1379 	mov	_P5MDOUT,#0xff
                           000026  1380 	C$config.c$68$1$3 ==.
                                   1381 ;	Z:\micap\display_7\/..\/config.c:68: P6MDOUT   = 0xFF;
      000026 75 9E FF         [24] 1382 	mov	_P6MDOUT,#0xff
                           000029  1383 	C$config.c$69$1$3 ==.
                                   1384 ;	Z:\micap\display_7\/..\/config.c:69: P7MDOUT   = 0xFF;
      000029 75 9F FF         [24] 1385 	mov	_P7MDOUT,#0xff
                           00002C  1386 	C$config.c$70$1$3 ==.
                                   1387 ;	Z:\micap\display_7\/..\/config.c:70: XBR2      = 0x40;
      00002C 75 E3 40         [24] 1388 	mov	_XBR2,#0x40
                           00002F  1389 	C$config.c$71$1$3 ==.
                           00002F  1390 	XG$Port_IO_Init$0$0 ==.
      00002F 22               [24] 1391 	ret
                                   1392 ;------------------------------------------------------------
                                   1393 ;Allocation info for local variables in function 'Oscillator_Init'
                                   1394 ;------------------------------------------------------------
                                   1395 ;i                         Allocated to registers r6 r7 
                                   1396 ;------------------------------------------------------------
                           000030  1397 	G$Oscillator_Init$0$0 ==.
                           000030  1398 	C$config.c$73$1$3 ==.
                                   1399 ;	Z:\micap\display_7\/..\/config.c:73: void Oscillator_Init()
                                   1400 ;	-----------------------------------------
                                   1401 ;	 function Oscillator_Init
                                   1402 ;	-----------------------------------------
      000030                       1403 _Oscillator_Init:
                           000030  1404 	C$config.c$76$1$4 ==.
                                   1405 ;	Z:\micap\display_7\/..\/config.c:76: SFRPAGE   = CONFIG_PAGE;
      000030 75 84 0F         [24] 1406 	mov	_SFRPAGE,#0x0f
                           000033  1407 	C$config.c$77$1$4 ==.
                                   1408 ;	Z:\micap\display_7\/..\/config.c:77: OSCXCN    = 0x67;
      000033 75 8C 67         [24] 1409 	mov	_OSCXCN,#0x67
                           000036  1410 	C$config.c$78$1$4 ==.
                                   1411 ;	Z:\micap\display_7\/..\/config.c:78: for (i = 0; i < 3000; i++);  // Wait 1ms for initialization
      000036 7E B8            [12] 1412 	mov	r6,#0xb8
      000038 7F 0B            [12] 1413 	mov	r7,#0x0b
      00003A                       1414 00107$:
      00003A EE               [12] 1415 	mov	a,r6
      00003B 24 FF            [12] 1416 	add	a,#0xff
      00003D FC               [12] 1417 	mov	r4,a
      00003E EF               [12] 1418 	mov	a,r7
      00003F 34 FF            [12] 1419 	addc	a,#0xff
      000041 FD               [12] 1420 	mov	r5,a
      000042 8C 06            [24] 1421 	mov	ar6,r4
      000044 8D 07            [24] 1422 	mov	ar7,r5
      000046 EC               [12] 1423 	mov	a,r4
      000047 4D               [12] 1424 	orl	a,r5
      000048 70 F0            [24] 1425 	jnz	00107$
                           00004A  1426 	C$config.c$79$1$4 ==.
                                   1427 ;	Z:\micap\display_7\/..\/config.c:79: while ((OSCXCN & 0x80) == 0);
      00004A                       1428 00102$:
      00004A E5 8C            [12] 1429 	mov	a,_OSCXCN
      00004C 30 E7 FB         [24] 1430 	jnb	acc.7,00102$
                           00004F  1431 	C$config.c$80$1$4 ==.
                                   1432 ;	Z:\micap\display_7\/..\/config.c:80: CLKSEL    = 0x01;
      00004F 75 97 01         [24] 1433 	mov	_CLKSEL,#0x01
                           000052  1434 	C$config.c$81$1$4 ==.
                           000052  1435 	XG$Oscillator_Init$0$0 ==.
      000052 22               [24] 1436 	ret
                                   1437 ;------------------------------------------------------------
                                   1438 ;Allocation info for local variables in function 'Interrupts_Init'
                                   1439 ;------------------------------------------------------------
                           000053  1440 	G$Interrupts_Init$0$0 ==.
                           000053  1441 	C$config.c$83$1$4 ==.
                                   1442 ;	Z:\micap\display_7\/..\/config.c:83: void Interrupts_Init()
                                   1443 ;	-----------------------------------------
                                   1444 ;	 function Interrupts_Init
                                   1445 ;	-----------------------------------------
      000053                       1446 _Interrupts_Init:
                           000053  1447 	C$config.c$85$1$5 ==.
                                   1448 ;	Z:\micap\display_7\/..\/config.c:85: IE        = 0x03;
      000053 75 A8 03         [24] 1449 	mov	_IE,#0x03
                           000056  1450 	C$config.c$86$1$5 ==.
                                   1451 ;	Z:\micap\display_7\/..\/config.c:86: IP        = 0xC2;
      000056 75 B8 C2         [24] 1452 	mov	_IP,#0xc2
                           000059  1453 	C$config.c$87$1$5 ==.
                           000059  1454 	XG$Interrupts_Init$0$0 ==.
      000059 22               [24] 1455 	ret
                                   1456 ;------------------------------------------------------------
                                   1457 ;Allocation info for local variables in function 'Init_Device'
                                   1458 ;------------------------------------------------------------
                           00005A  1459 	G$Init_Device$0$0 ==.
                           00005A  1460 	C$config.c$91$1$5 ==.
                                   1461 ;	Z:\micap\display_7\/..\/config.c:91: void Init_Device(void)
                                   1462 ;	-----------------------------------------
                                   1463 ;	 function Init_Device
                                   1464 ;	-----------------------------------------
      00005A                       1465 _Init_Device:
                           00005A  1466 	C$config.c$93$1$7 ==.
                                   1467 ;	Z:\micap\display_7\/..\/config.c:93: Reset_Sources_Init();
      00005A 12r00r00         [24] 1468 	lcall	_Reset_Sources_Init
                           00005D  1469 	C$config.c$94$1$7 ==.
                                   1470 ;	Z:\micap\display_7\/..\/config.c:94: Timer_Init();
      00005D 12r00r07         [24] 1471 	lcall	_Timer_Init
                           000060  1472 	C$config.c$95$1$7 ==.
                                   1473 ;	Z:\micap\display_7\/..\/config.c:95: Port_IO_Init();
      000060 12r00r11         [24] 1474 	lcall	_Port_IO_Init
                           000063  1475 	C$config.c$96$1$7 ==.
                                   1476 ;	Z:\micap\display_7\/..\/config.c:96: Oscillator_Init();
      000063 12r00r30         [24] 1477 	lcall	_Oscillator_Init
                           000066  1478 	C$config.c$97$1$7 ==.
                                   1479 ;	Z:\micap\display_7\/..\/config.c:97: Interrupts_Init();
      000066 12r00r53         [24] 1480 	lcall	_Interrupts_Init
                           000069  1481 	C$config.c$98$1$7 ==.
                           000069  1482 	XG$Init_Device$0$0 ==.
      000069 22               [24] 1483 	ret
                                   1484 ;------------------------------------------------------------
                                   1485 ;Allocation info for local variables in function 'delay_ms'
                                   1486 ;------------------------------------------------------------
                                   1487 ;t                         Allocated to registers r6 r7 
                                   1488 ;------------------------------------------------------------
                           00006A  1489 	G$delay_ms$0$0 ==.
                           00006A  1490 	C$util.h$8$1$7 ==.
                                   1491 ;	Z:\micap\display_7\/..\util.h:8: void delay_ms(unsigned int t)
                                   1492 ;	-----------------------------------------
                                   1493 ;	 function delay_ms
                                   1494 ;	-----------------------------------------
      00006A                       1495 _delay_ms:
      00006A AE 82            [24] 1496 	mov	r6,dpl
      00006C AF 83            [24] 1497 	mov	r7,dph
                           00006E  1498 	C$util.h$11$1$9 ==.
                                   1499 ;	Z:\micap\display_7\/..\util.h:11: TMOD |= 0x01;
      00006E 43 89 01         [24] 1500 	orl	_TMOD,#0x01
                           000071  1501 	C$util.h$12$1$9 ==.
                                   1502 ;	Z:\micap\display_7\/..\util.h:12: TMOD &= 0xFD; // 0b11111101
      000071 53 89 FD         [24] 1503 	anl	_TMOD,#0xfd
      000074                       1504 00106$:
                           000074  1505 	C$util.h$15$1$9 ==.
                                   1506 ;	Z:\micap\display_7\/..\util.h:15: for(;t > 0; t--)
      000074 EE               [12] 1507 	mov	a,r6
      000075 4F               [12] 1508 	orl	a,r7
      000076 60 16            [24] 1509 	jz	00108$
                           000078  1510 	C$util.h$17$2$10 ==.
                                   1511 ;	Z:\micap\display_7\/..\util.h:17: TR0 = 0; // Desabilita contagem do Timer0
      000078 C2 8C            [12] 1512 	clr	_TR0
                           00007A  1513 	C$util.h$18$2$10 ==.
                                   1514 ;	Z:\micap\display_7\/..\util.h:18: TF0 = 0; // Define flag de interrupcao de overflow para 0
      00007A C2 8D            [12] 1515 	clr	_TF0
                           00007C  1516 	C$util.h$20$2$10 ==.
                                   1517 ;	Z:\micap\display_7\/..\util.h:20: TL0 = 0x58;
      00007C 75 8A 58         [24] 1518 	mov	_TL0,#0x58
                           00007F  1519 	C$util.h$22$2$10 ==.
                                   1520 ;	Z:\micap\display_7\/..\util.h:22: TH0 = 0x9E;
      00007F 75 8C 9E         [24] 1521 	mov	_TH0,#0x9e
                           000082  1522 	C$util.h$24$2$10 ==.
                                   1523 ;	Z:\micap\display_7\/..\util.h:24: TR0 = 1;
      000082 D2 8C            [12] 1524 	setb	_TR0
                           000084  1525 	C$util.h$26$2$10 ==.
                                   1526 ;	Z:\micap\display_7\/..\util.h:26: while(TF0 != 1)
      000084                       1527 00101$:
      000084 30 8D FD         [24] 1528 	jnb	_TF0,00101$
                           000087  1529 	C$util.h$15$1$9 ==.
                                   1530 ;	Z:\micap\display_7\/..\util.h:15: for(;t > 0; t--)
      000087 1E               [12] 1531 	dec	r6
      000088 BE FF 01         [24] 1532 	cjne	r6,#0xff,00127$
      00008B 1F               [12] 1533 	dec	r7
      00008C                       1534 00127$:
      00008C 80 E6            [24] 1535 	sjmp	00106$
      00008E                       1536 00108$:
                           00008E  1537 	C$util.h$29$1$9 ==.
                           00008E  1538 	XG$delay_ms$0$0 ==.
      00008E 22               [24] 1539 	ret
                                   1540 ;------------------------------------------------------------
                                   1541 ;Allocation info for local variables in function 'clear'
                                   1542 ;------------------------------------------------------------
                           00008F  1543 	G$clear$0$0 ==.
                           00008F  1544 	C$util.h$32$1$9 ==.
                                   1545 ;	Z:\micap\display_7\/..\util.h:32: void clear()
                                   1546 ;	-----------------------------------------
                                   1547 ;	 function clear
                                   1548 ;	-----------------------------------------
      00008F                       1549 _clear:
                           00008F  1550 	C$util.h$34$1$11 ==.
                                   1551 ;	Z:\micap\display_7\/..\util.h:34: P0 = P1 = P2 = P3 = 0;
      00008F 75 B0 00         [24] 1552 	mov	_P3,#0x00
      000092 75 A0 00         [24] 1553 	mov	_P2,#0x00
      000095 75 90 00         [24] 1554 	mov	_P1,#0x00
      000098 75 80 00         [24] 1555 	mov	_P0,#0x00
                           00009B  1556 	C$util.h$35$1$11 ==.
                           00009B  1557 	XG$clear$0$0 ==.
      00009B 22               [24] 1558 	ret
                                   1559 ;------------------------------------------------------------
                                   1560 ;Allocation info for local variables in function 'esc_disp7s'
                                   1561 ;------------------------------------------------------------
                                   1562 ;n                         Allocated to registers r6 r7 
                                   1563 ;------------------------------------------------------------
                           00009C  1564 	G$esc_disp7s$0$0 ==.
                           00009C  1565 	C$main.c$16$1$11 ==.
                                   1566 ;	Z:\micap\display_7\main.c:16: void esc_disp7s(unsigned int n)
                                   1567 ;	-----------------------------------------
                                   1568 ;	 function esc_disp7s
                                   1569 ;	-----------------------------------------
      00009C                       1570 _esc_disp7s:
                           00009C  1571 	C$main.c$18$1$13 ==.
                                   1572 ;	Z:\micap\display_7\main.c:18: alg_E = (unsigned char)(n/10);
      00009C AE 82            [24] 1573 	mov	r6,dpl
      00009E AF 83            [24] 1574 	mov	r7,dph
      0000A0 75*00 0A         [24] 1575 	mov	__divuint_PARM_2,#0x0a
      0000A3 75*01 00         [24] 1576 	mov	(__divuint_PARM_2 + 1),#0x00
      0000A6 C0 07            [24] 1577 	push	ar7
      0000A8 C0 06            [24] 1578 	push	ar6
      0000AA 12r00r00         [24] 1579 	lcall	__divuint
      0000AD AC 82            [24] 1580 	mov	r4,dpl
      0000AF D0 06            [24] 1581 	pop	ar6
      0000B1 D0 07            [24] 1582 	pop	ar7
      0000B3 8C*00            [24] 1583 	mov	_alg_E,r4
                           0000B5  1584 	C$main.c$19$1$13 ==.
                                   1585 ;	Z:\micap\display_7\main.c:19: alg_D = (unsigned char)(n%10);
      0000B5 75*00 0A         [24] 1586 	mov	__moduint_PARM_2,#0x0a
      0000B8 75*01 00         [24] 1587 	mov	(__moduint_PARM_2 + 1),#0x00
      0000BB 8E 82            [24] 1588 	mov	dpl,r6
      0000BD 8F 83            [24] 1589 	mov	dph,r7
      0000BF 12r00r00         [24] 1590 	lcall	__moduint
      0000C2 AE 82            [24] 1591 	mov	r6,dpl
      0000C4 8E*01            [24] 1592 	mov	_alg_D,r6
                           0000C6  1593 	C$main.c$20$1$13 ==.
                           0000C6  1594 	XG$esc_disp7s$0$0 ==.
      0000C6 22               [24] 1595 	ret
                                   1596 ;------------------------------------------------------------
                                   1597 ;Allocation info for local variables in function 'sync_disp'
                                   1598 ;------------------------------------------------------------
                                   1599 ;cont_algs                 Allocated with name '_sync_disp_cont_algs_1_15'
                                   1600 ;------------------------------------------------------------
                           0000C7  1601 	G$sync_disp$0$0 ==.
                           0000C7  1602 	C$main.c$22$1$13 ==.
                                   1603 ;	Z:\micap\display_7\main.c:22: void sync_disp(void) __interrupt 5
                                   1604 ;	-----------------------------------------
                                   1605 ;	 function sync_disp
                                   1606 ;	-----------------------------------------
      0000C7                       1607 _sync_disp:
      0000C7 C0 E0            [24] 1608 	push	acc
      0000C9 C0 82            [24] 1609 	push	dpl
      0000CB C0 83            [24] 1610 	push	dph
      0000CD C0 D0            [24] 1611 	push	psw
                           0000CF  1612 	C$main.c$25$1$15 ==.
                                   1613 ;	Z:\micap\display_7\main.c:25: TF2 = 0;
      0000CF C2 CF            [12] 1614 	clr	_TF2
                           0000D1  1615 	C$main.c$26$1$15 ==.
                                   1616 ;	Z:\micap\display_7\main.c:26: if(cont_algs == 0)
      0000D1 E5*02            [12] 1617 	mov	a,_sync_disp_cont_algs_1_15
      0000D3 70 0E            [24] 1618 	jnz	00102$
                           0000D5  1619 	C$main.c$28$2$16 ==.
                                   1620 ;	Z:\micap\display_7\main.c:28: DISP_D = DES;
      0000D5 D2 91            [12] 1621 	setb	_P1_1
                           0000D7  1622 	C$main.c$29$2$16 ==.
                                   1623 ;	Z:\micap\display_7\main.c:29: SEGS = disp7[alg_E];
      0000D7 E5*00            [12] 1624 	mov	a,_alg_E
      0000D9 90r00r00         [24] 1625 	mov	dptr,#_disp7
      0000DC 93               [24] 1626 	movc	a,@a+dptr
      0000DD F5 80            [12] 1627 	mov	_P0,a
                           0000DF  1628 	C$main.c$30$2$16 ==.
                                   1629 ;	Z:\micap\display_7\main.c:30: DISP_E = LIG;
      0000DF C2 90            [12] 1630 	clr	_P1_0
      0000E1 80 0C            [24] 1631 	sjmp	00103$
      0000E3                       1632 00102$:
                           0000E3  1633 	C$main.c$34$2$17 ==.
                                   1634 ;	Z:\micap\display_7\main.c:34: DISP_E = DES;
      0000E3 D2 90            [12] 1635 	setb	_P1_0
                           0000E5  1636 	C$main.c$35$2$17 ==.
                                   1637 ;	Z:\micap\display_7\main.c:35: SEGS = disp7[alg_D];
      0000E5 E5*01            [12] 1638 	mov	a,_alg_D
      0000E7 90r00r00         [24] 1639 	mov	dptr,#_disp7
      0000EA 93               [24] 1640 	movc	a,@a+dptr
      0000EB F5 80            [12] 1641 	mov	_P0,a
                           0000ED  1642 	C$main.c$36$2$17 ==.
                                   1643 ;	Z:\micap\display_7\main.c:36: DISP_D = LIG;
      0000ED C2 91            [12] 1644 	clr	_P1_1
      0000EF                       1645 00103$:
                           0000EF  1646 	C$main.c$39$1$15 ==.
                                   1647 ;	Z:\micap\display_7\main.c:39: cont_algs++;
      0000EF 05*02            [12] 1648 	inc	_sync_disp_cont_algs_1_15
                           0000F1  1649 	C$main.c$41$1$15 ==.
                                   1650 ;	Z:\micap\display_7\main.c:41: if(cont_algs > 1)
      0000F1 E5*02            [12] 1651 	mov	a,_sync_disp_cont_algs_1_15
      0000F3 24 FE            [12] 1652 	add	a,#0xff - 0x01
      0000F5 50 03            [24] 1653 	jnc	00106$
                           0000F7  1654 	C$main.c$42$1$15 ==.
                                   1655 ;	Z:\micap\display_7\main.c:42: cont_algs = 0;
      0000F7 75*02 00         [24] 1656 	mov	_sync_disp_cont_algs_1_15,#0x00
      0000FA                       1657 00106$:
      0000FA D0 D0            [24] 1658 	pop	psw
      0000FC D0 83            [24] 1659 	pop	dph
      0000FE D0 82            [24] 1660 	pop	dpl
      000100 D0 E0            [24] 1661 	pop	acc
                           000102  1662 	C$main.c$43$1$15 ==.
                           000102  1663 	XG$sync_disp$0$0 ==.
      000102 32               [24] 1664 	reti
                                   1665 ;	eliminated unneeded mov psw,# (no regs used in bank)
                                   1666 ;	eliminated unneeded push/pop b
                                   1667 ;------------------------------------------------------------
                                   1668 ;Allocation info for local variables in function 'main'
                                   1669 ;------------------------------------------------------------
                                   1670 ;i                         Allocated to registers r6 r7 
                                   1671 ;------------------------------------------------------------
                           000103  1672 	G$main$0$0 ==.
                           000103  1673 	C$main.c$45$1$15 ==.
                                   1674 ;	Z:\micap\display_7\main.c:45: void main(void)
                                   1675 ;	-----------------------------------------
                                   1676 ;	 function main
                                   1677 ;	-----------------------------------------
      000103                       1678 _main:
                           000103  1679 	C$main.c$48$1$19 ==.
                                   1680 ;	Z:\micap\display_7\main.c:48: Init_Device();
      000103 12r00r5A         [24] 1681 	lcall	_Init_Device
                           000106  1682 	C$main.c$49$1$19 ==.
                                   1683 ;	Z:\micap\display_7\main.c:49: SFRPAGE = LEGACY_PAGE;
      000106 75 84 00         [24] 1684 	mov	_SFRPAGE,#0x00
                           000109  1685 	C$main.c$53$1$19 ==.
                                   1686 ;	Z:\micap\display_7\main.c:53: for(i = 0; i<100; i++)
      000109                       1687 00109$:
      000109 7E 00            [12] 1688 	mov	r6,#0x00
      00010B 7F 00            [12] 1689 	mov	r7,#0x00
      00010D                       1690 00105$:
                           00010D  1691 	C$main.c$54$2$20 ==.
                                   1692 ;	Z:\micap\display_7\main.c:54: esc_disp7s(i);
      00010D 8E 82            [24] 1693 	mov	dpl,r6
      00010F 8F 83            [24] 1694 	mov	dph,r7
      000111 C0 07            [24] 1695 	push	ar7
      000113 C0 06            [24] 1696 	push	ar6
      000115 12r00r9C         [24] 1697 	lcall	_esc_disp7s
      000118 D0 06            [24] 1698 	pop	ar6
      00011A D0 07            [24] 1699 	pop	ar7
                           00011C  1700 	C$main.c$53$2$20 ==.
                                   1701 ;	Z:\micap\display_7\main.c:53: for(i = 0; i<100; i++)
      00011C 0E               [12] 1702 	inc	r6
      00011D BE 00 01         [24] 1703 	cjne	r6,#0x00,00119$
      000120 0F               [12] 1704 	inc	r7
      000121                       1705 00119$:
      000121 C3               [12] 1706 	clr	c
      000122 EE               [12] 1707 	mov	a,r6
      000123 94 64            [12] 1708 	subb	a,#0x64
      000125 EF               [12] 1709 	mov	a,r7
      000126 64 80            [12] 1710 	xrl	a,#0x80
      000128 94 80            [12] 1711 	subb	a,#0x80
      00012A 40 E1            [24] 1712 	jc	00105$
                           00012C  1713 	C$main.c$55$2$20 ==.
                                   1714 ;	Z:\micap\display_7\main.c:55: delay_ms(500);
      00012C 90 01 F4         [24] 1715 	mov	dptr,#0x01f4
      00012F 12r00r6A         [24] 1716 	lcall	_delay_ms
      000132 80 D5            [24] 1717 	sjmp	00109$
                           000134  1718 	C$main.c$57$1$19 ==.
                           000134  1719 	XG$main$0$0 ==.
      000134 22               [24] 1720 	ret
                                   1721 	.area CSEG    (CODE)
                                   1722 	.area CONST   (CODE)
                           000000  1723 G$disp7$0$0 == .
      000000                       1724 _disp7:
      000000 7E                    1725 	.db #0x7e	; 126
      000001 30                    1726 	.db #0x30	; 48	'0'
      000002 6D                    1727 	.db #0x6d	; 109	'm'
      000003 79                    1728 	.db #0x79	; 121	'y'
      000004 33                    1729 	.db #0x33	; 51	'3'
      000005 5B                    1730 	.db #0x5b	; 91
      000006 5F                    1731 	.db #0x5f	; 95
      000007 70                    1732 	.db #0x70	; 112	'p'
      000008 7F                    1733 	.db #0x7f	; 127
      000009 7B                    1734 	.db #0x7b	; 123
      00000A 00                    1735 	.db #0x00	; 0
      00000B FF                    1736 	.db #0xff	; 255
                                   1737 	.area XINIT   (CODE)
                                   1738 	.area CABS    (ABS,CODE)
